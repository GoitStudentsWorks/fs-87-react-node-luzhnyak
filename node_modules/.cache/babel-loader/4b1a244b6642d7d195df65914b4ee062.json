{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setToken, clearToken, requestUserSignUp, requestUserLogin, requestUserLogout, refreshCurrentUser, updateUserAvatar, updateUserInfo, updateWaterNorma } from \"../../services/waterApi\";\nimport { handleApiError } from \"../../services/handleApiError\";\nexport const signUpThunk = createAsyncThunk(\"auth/register\", async (formData, thunkApi) => {\n  try {\n    const response = await requestUserSignUp(formData);\n    return response;\n  } catch (error) {\n    const errorObj = handleApiError(error);\n    return thunkApi.rejectWithValue(errorObj);\n  }\n});\nexport const loginThunk = createAsyncThunk(\"auth/login\", async (formData, thunkApi) => {\n  try {\n    const response = await requestUserLogin(formData);\n    return response;\n  } catch (error) {\n    const errorObj = handleApiError(error);\n    return thunkApi.rejectWithValue(errorObj);\n  }\n});\nexport const logoutThunk = createAsyncThunk(\"auth/logout\", async (_, thunkApi) => {\n  try {\n    await requestUserLogout();\n    clearToken();\n  } catch (error) {\n    const errorObj = handleApiError(error);\n    return thunkApi.rejectWithValue(errorObj);\n  }\n});\nexport const refreshCurrentUserThunk = createAsyncThunk(\"auth/refresh\", async (_, thunkApi) => {\n  const state = thunkApi.getState();\n  const token = state.auth.token;\n  try {\n    token && setToken(token);\n    const response = await refreshCurrentUser();\n    return response;\n  } catch (error) {\n    const errorObj = handleApiError(error);\n    return thunkApi.rejectWithValue(errorObj);\n  }\n}, {\n  condition: (_, thunkApi) => {\n    const state = thunkApi.getState();\n    const token = state.auth.token;\n    if (!token) {\n      // const errorObj = {\n      //   errorMessage: \"Unable to fetch user\",\n      //   errorCode: 401,\n      // };\n      // return thunkApi.rejectWithValue(errorObj);\n      return false;\n    }\n    return true;\n  }\n});\nexport const updateAvatarThunk = createAsyncThunk(\"auth/avatar\", async (newPhoto, thunkApi) => {\n  try {\n    const avatarURL = await updateUserAvatar(newPhoto);\n    return avatarURL;\n  } catch (error) {\n    const errorObj = handleApiError(error);\n    return thunkApi.rejectWithValue(errorObj);\n  }\n});\nexport const updateUserInfoThunk = createAsyncThunk(\"auth/edituserinfo\", async (formData, thunkApi) => {\n  try {\n    const response = await updateUserInfo(formData);\n    return response;\n  } catch (error) {\n    const errorObj = handleApiError(error);\n    return thunkApi.rejectWithValue(errorObj);\n  }\n});\nexport const updateWaterNormaThunk = createAsyncThunk(\"auth/updateWaterRate\", async (newWaterRate, thunkApi) => {\n  try {\n    const response = await updateWaterNorma(newWaterRate);\n    return response;\n  } catch (error) {\n    const errorObj = handleApiError(error);\n    return thunkApi.rejectWithValue(errorObj);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","setToken","clearToken","requestUserSignUp","requestUserLogin","requestUserLogout","refreshCurrentUser","updateUserAvatar","updateUserInfo","updateWaterNorma","handleApiError","signUpThunk","formData","thunkApi","response","error","errorObj","rejectWithValue","loginThunk","logoutThunk","_","refreshCurrentUserThunk","state","getState","token","auth","condition","updateAvatarThunk","newPhoto","avatarURL","updateUserInfoThunk","updateWaterNormaThunk","newWaterRate"],"sources":["D:/Web/aqua-frontend/src/redux/auth/operations.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  setToken,\r\n  clearToken,\r\n  requestUserSignUp,\r\n  requestUserLogin,\r\n  requestUserLogout,\r\n  refreshCurrentUser,\r\n  updateUserAvatar,\r\n  updateUserInfo,\r\n  updateWaterNorma,\r\n} from \"../../services/waterApi\";\r\nimport { RootState } from \"../store\";\r\nimport { IRegisterUser, IUpdateUser } from \"../../types\";\r\nimport { handleApiError } from \"../../services/handleApiError\";\r\n\r\nexport const signUpThunk = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (formData: IRegisterUser, thunkApi) => {\r\n    try {\r\n      const response = await requestUserSignUp(formData);\r\n      return response;\r\n    } catch (error) {\r\n      const errorObj = handleApiError(error);\r\n      return thunkApi.rejectWithValue(errorObj);\r\n    }\r\n  }\r\n);\r\n\r\nexport const loginThunk = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (formData: IRegisterUser, thunkApi) => {\r\n    try {\r\n      const response = await requestUserLogin(formData);\r\n      return response;\r\n    } catch (error) {\r\n      const errorObj = handleApiError(error);\r\n      return thunkApi.rejectWithValue(errorObj);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutThunk = createAsyncThunk(\r\n  \"auth/logout\",\r\n  async (_, thunkApi) => {\r\n    try {\r\n      await requestUserLogout();\r\n      clearToken();\r\n    } catch (error) {\r\n      const errorObj = handleApiError(error);\r\n      return thunkApi.rejectWithValue(errorObj);\r\n    }\r\n  }\r\n);\r\n\r\nexport const refreshCurrentUserThunk = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkApi) => {\r\n    const state = thunkApi.getState() as RootState;\r\n    const token = state.auth.token;\r\n\r\n    try {\r\n      token && setToken(token);\r\n      const response = await refreshCurrentUser();\r\n      return response;\r\n    } catch (error) {\r\n      const errorObj = handleApiError(error);\r\n      return thunkApi.rejectWithValue(errorObj);\r\n    }\r\n  },\r\n\r\n  {\r\n    condition: (_, thunkApi) => {\r\n      const state = thunkApi.getState() as RootState;\r\n      const token = state.auth.token;\r\n      if (!token) {\r\n        // const errorObj = {\r\n        //   errorMessage: \"Unable to fetch user\",\r\n        //   errorCode: 401,\r\n        // };\r\n        // return thunkApi.rejectWithValue(errorObj);\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n  }\r\n);\r\n\r\nexport const updateAvatarThunk = createAsyncThunk(\r\n  \"auth/avatar\",\r\n  async (newPhoto: Blob, thunkApi) => {\r\n    try {\r\n      const avatarURL = await updateUserAvatar(newPhoto);\r\n      return avatarURL;\r\n    } catch (error) {\r\n      const errorObj = handleApiError(error);\r\n      return thunkApi.rejectWithValue(errorObj);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateUserInfoThunk = createAsyncThunk(\r\n  \"auth/edituserinfo\",\r\n  async (formData: IUpdateUser, thunkApi) => {\r\n    try {\r\n      const response = await updateUserInfo(formData);\r\n      return response;\r\n    } catch (error) {\r\n      const errorObj = handleApiError(error);\r\n      return thunkApi.rejectWithValue(errorObj);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateWaterNormaThunk = createAsyncThunk(\r\n  \"auth/updateWaterRate\",\r\n  async (newWaterRate: string, thunkApi) => {\r\n    try {\r\n      const response = await updateWaterNorma(newWaterRate);\r\n      return response;\r\n    } catch (error) {\r\n      const errorObj = handleApiError(error);\r\n      return thunkApi.rejectWithValue(errorObj);\r\n    }\r\n  }\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}