{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\aqua-frontend\\\\src\\\\components\\\\DailyNorma\\\\DailyNormaModal.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport css from './DailyNormaModal.module.css';\nimport { useDispatch } from 'react-redux';\nimport { updateWaterNormaThunk } from '../../redux/auth/operations';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyNormaModal = _ref => {\n  _s();\n  let {\n    setVisible,\n    onWaterAmountSave\n  } = _ref;\n  const dispatch = useDispatch();\n  const [userData, setUserData] = useState({\n    gender: 'female',\n    weight: '',\n    activityTime: '',\n    waterAmount: ''\n  });\n  const initialValues = {\n    gender: 'female',\n    weight: '',\n    activityTime: '',\n    waterAmount: '0'\n  };\n  const validationSchema = Yup.object({\n    weight: Yup.number().required('Weight is required.').min(1, 'Min weight amount is 1'),\n    activityTime: Yup.number().required('ActivityTime is required.').min(0, 'Min weight amount is 0'),\n    waterAmount: Yup.number().required('WaterAmount is required.').min(0, 'Min water amount is 0 L').max(15, 'Max water amount is 15 L  ')\n  });\n  const [neededWaterAmount, setNeededWaterAmount] = useState(2.0);\n  const calculateWaterAmount = (gender, weight, activityTime) => {\n    if (gender === 'female') {\n      return (weight * 0.03 + activityTime * 0.4).toFixed(1);\n    } else {\n      return (weight * 0.03 + activityTime * 0.6).toFixed(1);\n    }\n  };\n  const onSubmit = (values, _ref2) => {\n    let {\n      resetForm\n    } = _ref2;\n    //   event.preventDefault();\n\n    setUserData(prevData => ({\n      ...prevData,\n      waterAmount: values.waterAmount\n    }));\n    const waterAmount = values.waterAmount;\n    const calculatedWaterAmount = calculateWaterAmount(values.gender, values.weight, values.activityTime);\n    setNeededWaterAmount(calculatedWaterAmount);\n\n    // Dispatch the action to update the water rate in Redux\n    dispatch(updateWaterNormaThunk(parseFloat(waterAmount)));\n    onWaterAmountSave(parseFloat(waterAmount) * 1000);\n    dispatch(updateWaterNormaThunk(waterAmount * 1000));\n    setVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.formTitle,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.forField,\n        children: [\"For girl:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.formulaField,\n          children: \"V=(M*0,03) + (T*0,4)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.forField,\n        children: [\"For man:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.formulaField,\n          children: \"V=(M*0,04) + (T*0,6)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.formulaDescContainer,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.formulaDesc,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.formulaDescSymbol,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \"V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: _ref3 => {\n        let {\n          values,\n          errors,\n          touched,\n          setFieldValue\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: css.formName,\n            children: \"Calculate your rate:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.chooseGender,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: css.radioLabel,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: css.formRadioInput,\n                type: \"radio\",\n                name: \"gender\",\n                value: \"female\",\n                checked: values.gender === 'female'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), \"For woman\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: css.radioLabel,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: css.formRadioInput,\n                type: \"radio\",\n                name: \"gender\",\n                value: \"male\",\n                checked: values.gender === 'male'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), \"For man\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.questionContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: css.questionLabel,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: css.questionText,\n                children: \"Your weight in kilograms:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: `${css.questionInput}\n                ${errors.weight && touched.weight ? css.errorBorder : ''} ${errors.weight && touched.weight ? css.errorInput : ''}\n                `,\n                type: \"text\",\n                name: \"weight\",\n                value: values.weight,\n                onChange: event => {\n                  setFieldValue('weight', event.target.value);\n                  const {\n                    name,\n                    value\n                  } = event.target;\n                  setUserData(prevData => ({\n                    ...prevData,\n                    [name]: value\n                  }));\n                  if (name === 'weight' || name === 'activityTime') {\n                    const calculatedWaterAmount = calculateWaterAmount(userData.gender, name === 'weight' ? value : userData.weight, name === 'activityTime' ? value : userData.activityTime);\n                    setNeededWaterAmount(calculatedWaterAmount);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"weight\",\n                component: \"div\",\n                className: css.errormessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: css.questionLabel,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: css.questionText,\n                children: \"The time of active participation in sports or other activities with a high physical. load in hours:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: `${css.questionInput}\n                ${errors.activityTime && touched.activityTime ? css.errorBorder : ''} ${errors.activityTime && touched.activityTime ? css.errorInput : ''}\n                `,\n                type: \"text\",\n                name: \"activityTime\",\n                value: values.activityTime,\n                onChange: event => {\n                  setFieldValue('activityTime', event.target.value);\n                  const {\n                    name,\n                    value\n                  } = event.target;\n                  setUserData(prevData => ({\n                    ...prevData,\n                    [name]: value\n                  }));\n                  if (name === 'weight' || name === 'activityTime') {\n                    const calculatedWaterAmount = calculateWaterAmount(userData.gender, name === 'weight' ? value : userData.weight, name === 'activityTime' ? value : userData.activityTime);\n                    setNeededWaterAmount(calculatedWaterAmount);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"activityTime\",\n                component: \"div\",\n                className: css.errormessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.requiredAmountContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: css.requiredAmountText,\n              children: \"The required amount of water in liters per day:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"neededWaterAmount\",\n              className: css.requiredAmountValue,\n              children: [neededWaterAmount, \" L\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: css.questionLabel,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: css.howMuchText,\n              children: \"Write down how much water you will drink:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: `${css.questionInput}\n                ${errors.waterAmount && touched.waterAmount ? css.errorBorder : ''} ${errors.waterAmount && touched.waterAmount ? css.errorInput : ''}\n                `,\n              type: \"text\",\n              name: \"waterAmount\",\n              value: values.waterAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"waterAmount\",\n              component: \"div\",\n              className: css.errormessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: css.submitButton,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyNormaModal, \"vbWgoCjO5IPaviA72GU/43OI1Rk=\", false, function () {\n  return [useDispatch];\n});\n_c = DailyNormaModal;\nexport default DailyNormaModal;\nvar _c;\n$RefreshReg$(_c, \"DailyNormaModal\");","map":{"version":3,"names":["useState","css","useDispatch","updateWaterNormaThunk","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","DailyNormaModal","_ref","_s","setVisible","onWaterAmountSave","dispatch","userData","setUserData","gender","weight","activityTime","waterAmount","initialValues","validationSchema","object","number","required","min","max","neededWaterAmount","setNeededWaterAmount","calculateWaterAmount","toFixed","onSubmit","values","_ref2","resetForm","prevData","calculatedWaterAmount","parseFloat","className","container","children","formTitle","forField","formulaField","fileName","_jsxFileName","lineNumber","columnNumber","formulaDescContainer","formulaDesc","formulaDescSymbol","_ref3","errors","touched","setFieldValue","formName","chooseGender","radioLabel","formRadioInput","type","name","value","checked","questionContainer","questionLabel","questionText","questionInput","errorBorder","errorInput","onChange","event","target","component","errormessage","requiredAmountContainer","requiredAmountText","id","requiredAmountValue","howMuchText","submitButton","_c","$RefreshReg$"],"sources":["D:/Web/aqua-frontend/src/components/DailyNorma/DailyNormaModal.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport css from './DailyNormaModal.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateWaterNormaThunk } from '../../redux/auth/operations';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst DailyNormaModal = ({ setVisible, onWaterAmountSave }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [userData, setUserData] = useState({\r\n    gender: 'female',\r\n    weight: '',\r\n    activityTime: '',\r\n    waterAmount: '',\r\n  });\r\n\r\n  const initialValues = {\r\n    gender: 'female',\r\n    weight: '',\r\n    activityTime: '',\r\n    waterAmount: '0',\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    weight: Yup.number().required('Weight is required.').min(1, 'Min weight amount is 1'),\r\n    activityTime: Yup.number().required('ActivityTime is required.').min(0, 'Min weight amount is 0'),\r\n    waterAmount: Yup.number()\r\n      .required('WaterAmount is required.')\r\n      .min(0, 'Min water amount is 0 L')\r\n      .max(15, 'Max water amount is 15 L  '),\r\n  });\r\n\r\n  const [neededWaterAmount, setNeededWaterAmount] = useState(2.0);\r\n\r\n  const calculateWaterAmount = (gender, weight, activityTime) => {\r\n    if (gender === 'female') {\r\n      return (weight * 0.03 + activityTime * 0.4).toFixed(1);\r\n    } else {\r\n      return (weight * 0.03 + activityTime * 0.6).toFixed(1);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values, { resetForm }) => {\r\n    //   event.preventDefault();\r\n\r\n    setUserData(prevData => ({\r\n      ...prevData,\r\n      waterAmount: values.waterAmount,\r\n    }));\r\n\r\n    const waterAmount = values.waterAmount;\r\n\r\n    const calculatedWaterAmount = calculateWaterAmount(\r\n      values.gender,\r\n      values.weight,\r\n      values.activityTime\r\n    );\r\n\r\n    setNeededWaterAmount(calculatedWaterAmount);\r\n\r\n    // Dispatch the action to update the water rate in Redux\r\n    dispatch(updateWaterNormaThunk(parseFloat(waterAmount)));\r\n\r\n    onWaterAmountSave(parseFloat(waterAmount) * 1000);\r\n\r\n    dispatch(updateWaterNormaThunk(waterAmount * 1000));\r\n\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.formTitle}>\r\n        <p className={css.forField}>\r\n          For girl:{' '}\r\n          <span className={css.formulaField}>V=(M*0,03) + (T*0,4)</span>\r\n        </p>\r\n        <p className={css.forField}>\r\n          For man:{' '}\r\n          <span className={css.formulaField}>V=(M*0,04) + (T*0,6)</span>\r\n        </p>\r\n      </div>\r\n\r\n      <div className={css.formulaDescContainer}>\r\n        <p className={css.formulaDesc}>\r\n          <span className={css.formulaDescSymbol}>*</span>V is the volume of the\r\n          water norm in liters per day, M is your body weight, T is the time of\r\n          active sports, or another type of activity commensurate in terms of\r\n          loads (in the absence of these, you must set 0)\r\n        </p>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form>\r\n            <h3 className={css.formName}>Calculate your rate:</h3>\r\n            <div className={css.chooseGender}>\r\n              <label className={css.radioLabel}>\r\n                <Field\r\n                  className={css.formRadioInput}\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  value=\"female\"\r\n                  checked={values.gender === 'female'}\r\n                />\r\n                For woman\r\n              </label>\r\n\r\n              <label className={css.radioLabel}>\r\n                <Field\r\n                  className={css.formRadioInput}\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  value=\"male\"\r\n                  checked={values.gender === 'male'}\r\n                />\r\n                For man\r\n              </label>\r\n            </div>\r\n\r\n            <div className={css.questionContainer}>\r\n              <label className={css.questionLabel}>\r\n                <span className={css.questionText}>\r\n                  Your weight in kilograms:\r\n                </span>\r\n                <Field\r\n                  className={`${css.questionInput}\r\n                ${errors.weight && touched.weight ? css.errorBorder : ''} ${\r\n                    errors.weight && touched.weight ? css.errorInput : ''\r\n                  }\r\n                `}\r\n                  type=\"text\"\r\n                  name=\"weight\"\r\n                  value={values.weight}\r\n                  onChange={event => {\r\n                    setFieldValue('weight', event.target.value);\r\n                    const { name, value } = event.target;\r\n                    setUserData(prevData => ({\r\n                      ...prevData,\r\n                      [name]: value,\r\n                    }));\r\n\r\n                    if (name === 'weight' || name === 'activityTime') {\r\n                      const calculatedWaterAmount = calculateWaterAmount(\r\n                        userData.gender,\r\n                        name === 'weight' ? value : userData.weight,\r\n                        name === 'activityTime' ? value : userData.activityTime\r\n                      );\r\n                      setNeededWaterAmount(calculatedWaterAmount);\r\n                    }\r\n                  }}\r\n                />\r\n\r\n                <ErrorMessage\r\n                  name=\"weight\"\r\n                  component=\"div\"\r\n                  className={css.errormessage}\r\n                />\r\n              </label>\r\n\r\n              <label className={css.questionLabel}>\r\n                <span className={css.questionText}>\r\n                  The time of active participation in sports or other activities\r\n                  with a high physical. load in hours:\r\n                </span>\r\n                <Field\r\n                  className={`${css.questionInput}\r\n                ${\r\n                  errors.activityTime && touched.activityTime\r\n                    ? css.errorBorder\r\n                    : ''\r\n                } ${\r\n                    errors.activityTime && touched.activityTime\r\n                      ? css.errorInput\r\n                      : ''\r\n                  }\r\n                `}\r\n                  type=\"text\"\r\n                  name=\"activityTime\"\r\n                  value={values.activityTime}\r\n                  onChange={event => {\r\n                    setFieldValue('activityTime', event.target.value);\r\n                    const { name, value } = event.target;\r\n                    setUserData(prevData => ({\r\n                      ...prevData,\r\n                      [name]: value,\r\n                    }));\r\n\r\n                    if (name === 'weight' || name === 'activityTime') {\r\n                      const calculatedWaterAmount = calculateWaterAmount(\r\n                        userData.gender,\r\n                        name === 'weight' ? value : userData.weight,\r\n                        name === 'activityTime' ? value : userData.activityTime\r\n                      );\r\n                      setNeededWaterAmount(calculatedWaterAmount);\r\n                    }\r\n                  }}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"activityTime\"\r\n                  component=\"div\"\r\n                  className={css.errormessage}\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div className={css.requiredAmountContainer}>\r\n              <p className={css.requiredAmountText}>\r\n                The required amount of water in liters per day:\r\n              </p>\r\n              <p id=\"neededWaterAmount\" className={css.requiredAmountValue}>\r\n                {neededWaterAmount} L\r\n              </p>\r\n            </div>\r\n\r\n            <label className={css.questionLabel}>\r\n              <span className={css.howMuchText}>\r\n                Write down how much water you will drink:\r\n              </span>\r\n              <Field\r\n                className={`${css.questionInput}\r\n                ${\r\n                  errors.waterAmount && touched.waterAmount\r\n                    ? css.errorBorder\r\n                    : ''\r\n                } ${\r\n                  errors.waterAmount && touched.waterAmount\r\n                    ? css.errorInput\r\n                    : ''\r\n                }\r\n                `}\r\n                type=\"text\"\r\n                name=\"waterAmount\"\r\n                value={values.waterAmount}\r\n              />\r\n              <ErrorMessage\r\n                name=\"waterAmount\"\r\n                component=\"div\"\r\n                className={css.errormessage}\r\n              />\r\n            </label>\r\n\r\n            <button type=\"submit\" className={css.submitButton}>\r\n              Save\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyNormaModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}