{"ast":null,"code":"import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { addWaterThunk, deleteWaterThunk, getAllWaterForTodayThunk, updateWaterByIdThunk, getAllWaterForMonthThunk } from './operations';\nconst waterInitialState = {\n  today: {\n    dailyEntries: []\n  },\n  itemsPerMonth: [],\n  isLoading: false,\n  error: null\n};\nconst handlePending = state => {\n  state.isLoading = true;\n  state.error = null;\n};\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\nconst waterSlice = createSlice({\n  name: 'water',\n  initialState: waterInitialState,\n  extraReducers: builder => builder.addCase(addWaterThunk.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    state.today.dailyEntries.push(action.payload);\n  }).addCase(deleteWaterThunk.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    state.today.dailyEntries = state.today.dailyEntries.filter(entry => entry._id !== action.payload._id);\n    //    const index = state.items.findIndex(\n    //      entry => entry.id === action.payload.id\n    //    );\n    //    state.items.splice(index, 1);\n  }).addCase(getAllWaterForTodayThunk.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    state.today.dailyEntries = action.payload;\n  }).addCase(updateWaterByIdThunk.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    const array = state.today.dailyWaterList;\n    const idx = array.findIndex(item => item._id === action.payload._id);\n    if (idx !== -1) {\n      array[idx] = action.payload;\n    }\n  }).addCase(getAllWaterForMonthThunk.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    state.itemsPerMonth = action.payload;\n  }).addMatcher(isAnyOf(addWaterThunk.pending, deleteWaterThunk.pending, getAllWaterForTodayThunk.pending, updateWaterByIdThunk.pending, getAllWaterForMonthThunk.pending), handlePending).addMatcher(isAnyOf(addWaterThunk.rejected, deleteWaterThunk.rejected, getAllWaterForTodayThunk.rejected, updateWaterByIdThunk.rejected, getAllWaterForMonthThunk.rejected), handleRejected)\n});\nexport const waterReducer = waterSlice.reducer;","map":{"version":3,"names":["createSlice","isAnyOf","addWaterThunk","deleteWaterThunk","getAllWaterForTodayThunk","updateWaterByIdThunk","getAllWaterForMonthThunk","waterInitialState","today","dailyEntries","itemsPerMonth","isLoading","error","handlePending","state","handleRejected","action","payload","waterSlice","name","initialState","extraReducers","builder","addCase","fulfilled","push","filter","entry","_id","array","dailyWaterList","idx","findIndex","item","addMatcher","pending","rejected","waterReducer","reducer"],"sources":["D:/Web/aqua-frontend/src/redux/waterConsumption/slice.js"],"sourcesContent":["import { createSlice, isAnyOf } from '@reduxjs/toolkit';\r\nimport {\r\n  addWaterThunk,\r\n  deleteWaterThunk,\r\n  getAllWaterForTodayThunk,\r\n  updateWaterByIdThunk,\r\n  getAllWaterForMonthThunk,\r\n} from './operations';\r\n\r\nconst waterInitialState = {\r\n  today: { dailyEntries: [] },\r\n  itemsPerMonth: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst handlePending = state => {\r\n  state.isLoading = true;\r\n  state.error = null;\r\n};\r\n\r\nconst handleRejected = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst waterSlice = createSlice({\r\n  name: 'water',\r\n  initialState: waterInitialState,\r\n\r\n  extraReducers: builder =>\r\n    builder\r\n      .addCase(addWaterThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = null;\r\n        state.today.dailyEntries.push(action.payload);\r\n      })\r\n      .addCase(deleteWaterThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = null;\r\n        state.today.dailyEntries = state.today.dailyEntries.filter(\r\n          entry => entry._id !== action.payload._id\r\n        );\r\n        //    const index = state.items.findIndex(\r\n        //      entry => entry.id === action.payload.id\r\n        //    );\r\n        //    state.items.splice(index, 1);\r\n      })\r\n      .addCase(getAllWaterForTodayThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = null;\r\n        state.today.dailyEntries = action.payload;\r\n      })\r\n      .addCase(updateWaterByIdThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = null;\r\n        const array = state.today.dailyWaterList;\r\n        const idx = array.findIndex(item => item._id === action.payload._id);\r\n        if (idx !== -1) {\r\n          array[idx] = action.payload;\r\n        }\r\n      })\r\n      .addCase(getAllWaterForMonthThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = null;\r\n        state.itemsPerMonth = action.payload;\r\n      })\r\n      .addMatcher(\r\n        isAnyOf(\r\n          addWaterThunk.pending,\r\n          deleteWaterThunk.pending,\r\n          getAllWaterForTodayThunk.pending,\r\n          updateWaterByIdThunk.pending,\r\n          getAllWaterForMonthThunk.pending\r\n        ),\r\n        handlePending\r\n      )\r\n      .addMatcher(\r\n        isAnyOf(\r\n          addWaterThunk.rejected,\r\n          deleteWaterThunk.rejected,\r\n          getAllWaterForTodayThunk.rejected,\r\n          updateWaterByIdThunk.rejected,\r\n          getAllWaterForMonthThunk.rejected\r\n        ),\r\n        handleRejected\r\n      ),\r\n});\r\n\r\nexport const waterReducer = waterSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}