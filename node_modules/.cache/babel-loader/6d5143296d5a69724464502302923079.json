{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\aqua-frontend\\\\src\\\\components\\\\AddWaterModal\\\\AddWaterModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport css from './AddWaterModal.module.css';\nimport { Formik, Form, Field } from 'formik';\nimport { object, number, date } from 'yup';\nimport { ReactComponent as IconPlus } from '../../images/icons/plus-small.svg';\nimport { ReactComponent as IconMinus } from '../../images/icons/minus-small.svg';\nimport { TimeOptionsModal } from './TimeOptionsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddWaterModal = _ref => {\n  _s();\n  let {\n    isAddWater,\n    isEditWater\n  } = _ref;\n  const [cleanStatus, setCleanStatus] = useState({\n    isAddWater: true,\n    isEditWater: true\n  });\n  const [waterValue, setWaterValue] = useState(0);\n  const [previousValue, setPreviousValue] = useState(waterValue ? waterValue : 0);\n  let userSchema = object({\n    waterValue: number().required().positive().integer(),\n    recordingTime: date().required().default(() => new Date()),\n    waterUsed: number().positive().integer()\n  });\n  const getCurrentTime = () => {\n    const now = new Date();\n    const hours = now.getHours().toString().padStart(2, '0');\n    const minutes = Math.floor(now.getMinutes());\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    return `${hours}:${formattedMinutes}`;\n  };\n  const initialValues = {\n    waterValue: 0,\n    recordingTime: getCurrentTime(),\n    waterUsed: 0\n  };\n  const handleSubmit = () => {\n    setCleanStatus({\n      isAddWater: !cleanStatus.isAddWater,\n      isEditWater: !cleanStatus.isEditWater\n    });\n  };\n  const setPreviousAmount = e => {\n    const trimmedValue = e.target.value.trim();\n    if (trimmedValue === '') {\n      setWaterValue(previousValue);\n    }\n  };\n  const addAmountOfWater = () => {\n    setWaterValue(Number.parseInt(waterValue) + 1);\n  };\n  const minusAmountOfWater = () => {\n    if (waterValue > 0) {\n      setWaterValue(Number.parseInt(waterValue) - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    children: _ref2 => {\n      let {\n        handleBlur,\n        setFieldValue,\n        values\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        children: [isAddWater && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: css.headlines,\n          children: \"Choose a value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: css.paragraphs,\n          children: \"Amount of water:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: minusAmountOfWater,\n            children: /*#__PURE__*/_jsxDEV(IconMinus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            min: \"0\",\n            type: \"number\",\n            name: \"waterValue\",\n            onBlur: handleBlur,\n            value: waterValue,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: addAmountOfWater,\n            children: /*#__PURE__*/_jsxDEV(IconPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: css.paragraphs,\n            children: \"Recording time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"select\",\n            name: \"recordingTime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: css.headlines,\n          children: \"Enter the value of the water used:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          min: \"0\",\n          type: \"number\",\n          name: \"waterEditValue\",\n          onBlur: setPreviousAmount,\n          value: waterValue,\n          onChange: e => {\n            const newValue = e.target.value;\n            // if (newValue >= 0) {\n            // setFieldValue('waterValue', newValue);\n            setWaterValue(newValue);\n            // }\n          },\n\n          onClick: e => {\n            const newValue = e.target.value === '0' ? '' : e.target.value;\n            if (newValue >= 0) {\n              setFieldValue('waterValue', newValue);\n              setWaterValue(newValue);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AddWaterModal, \"aimmrzgtnUjuLiCWp1tjES3S/HE=\");\n_c = AddWaterModal;\nexport default AddWaterModal;\n\n// {isEditWater && (\n//   <div>\n//     <div>\n//       <span>Value</span>\n//       <span>Time</span>\n//     </div>\n//     <h2 className={css.headlines}>Correct entered data:</h2>\n//   </div>\n// )}\n\n// <button type=\"button\">Minus</button>\n// <Field type=\"number\" name=\"waterValue\" />\n// <button type=\"button\">Add</button>\n\n// <div>value</div>\nvar _c;\n$RefreshReg$(_c, \"AddWaterModal\");","map":{"version":3,"names":["React","useState","css","Formik","Form","Field","object","number","date","ReactComponent","IconPlus","IconMinus","TimeOptionsModal","jsxDEV","_jsxDEV","AddWaterModal","_ref","_s","isAddWater","isEditWater","cleanStatus","setCleanStatus","waterValue","setWaterValue","previousValue","setPreviousValue","userSchema","required","positive","integer","recordingTime","default","Date","waterUsed","getCurrentTime","now","hours","getHours","toString","padStart","minutes","Math","floor","getMinutes","formattedMinutes","initialValues","handleSubmit","setPreviousAmount","e","trimmedValue","target","value","trim","addAmountOfWater","Number","parseInt","minusAmountOfWater","onSubmit","children","_ref2","handleBlur","setFieldValue","values","autoComplete","className","headlines","fileName","_jsxFileName","lineNumber","columnNumber","paragraphs","type","onClick","min","name","onBlur","readOnly","onChange","newValue","_c","$RefreshReg$"],"sources":["D:/Web/aqua-frontend/src/components/AddWaterModal/AddWaterModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport css from './AddWaterModal.module.css';\r\n\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { object, number, date } from 'yup';\r\n\r\nimport { ReactComponent as IconPlus } from '../../images/icons/plus-small.svg';\r\nimport { ReactComponent as IconMinus } from '../../images/icons/minus-small.svg';\r\n\r\nimport { TimeOptionsModal } from './TimeOptionsModal';\r\n\r\nconst AddWaterModal = ({ isAddWater, isEditWater }) => {\r\n  const [cleanStatus, setCleanStatus] = useState({\r\n    isAddWater: true,\r\n    isEditWater: true,\r\n  });\r\n\r\n  const [waterValue, setWaterValue] = useState(0);\r\n  const [previousValue, setPreviousValue] = useState(\r\n    waterValue ? waterValue : 0\r\n  );\r\n\r\n  let userSchema = object({\r\n    waterValue: number().required().positive().integer(),\r\n    recordingTime: date()\r\n      .required()\r\n      .default(() => new Date()),\r\n    waterUsed: number().positive().integer(),\r\n  });\r\n\r\n  const getCurrentTime = () => {\r\n    const now = new Date();\r\n    const hours = now.getHours().toString().padStart(2, '0');\r\n    const minutes = Math.floor(now.getMinutes());\r\n    const formattedMinutes = minutes.toString().padStart(2, '0');\r\n    return `${hours}:${formattedMinutes}`;\r\n  };\r\n\r\n  const initialValues = {\r\n    waterValue: 0,\r\n    recordingTime: getCurrentTime(),\r\n    waterUsed: 0,\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setCleanStatus({\r\n      isAddWater: !cleanStatus.isAddWater,\r\n      isEditWater: !cleanStatus.isEditWater,\r\n    });\r\n  };\r\n\r\n  const setPreviousAmount = e => {\r\n    const trimmedValue = e.target.value.trim();\r\n    if (trimmedValue === '') {\r\n      setWaterValue(previousValue);\r\n    }\r\n  };\r\n\r\n  const addAmountOfWater = () => {\r\n    setWaterValue(Number.parseInt(waterValue) + 1);\r\n  };\r\n\r\n  const minusAmountOfWater = () => {\r\n    if (waterValue > 0) {\r\n      setWaterValue(Number.parseInt(waterValue) - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n      {({ handleBlur, setFieldValue, values }) => (\r\n        <Form autoComplete=\"off\">\r\n          {isAddWater && <h2 className={css.headlines}>Choose a value:</h2>}\r\n          <p className={css.paragraphs}>Amount of water:</p>\r\n          <div>\r\n            <button type=\"button\" onClick={minusAmountOfWater}>\r\n              <IconMinus />\r\n            </button>\r\n            <Field\r\n              min=\"0\"\r\n              type=\"number\"\r\n              name=\"waterValue\"\r\n              onBlur={handleBlur}\r\n              value={waterValue}\r\n              readOnly\r\n            />\r\n            <button type=\"button\" onClick={addAmountOfWater}>\r\n              <IconPlus />\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <p className={css.paragraphs}>Recording time:</p>\r\n            <Field type=\"select\" name=\"recordingTime\" />\r\n          </div>\r\n          <h2 className={css.headlines}>Enter the value of the water used:</h2>\r\n          <Field\r\n            min=\"0\"\r\n            type=\"number\"\r\n            name=\"waterEditValue\"\r\n            onBlur={setPreviousAmount}\r\n            value={waterValue}\r\n            onChange={e => {\r\n              const newValue = e.target.value;\r\n              // if (newValue >= 0) {\r\n              // setFieldValue('waterValue', newValue);\r\n              setWaterValue(newValue);\r\n              // }\r\n            }}\r\n            onClick={e => {\r\n              const newValue = e.target.value === '0' ? '' : e.target.value;\r\n              if (newValue >= 0) {\r\n                setFieldValue('waterValue', newValue);\r\n                setWaterValue(newValue);\r\n              }\r\n            }}\r\n          />\r\n          <button type=\"submit\">Save</button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddWaterModal;\r\n\r\n// {isEditWater && (\r\n//   <div>\r\n//     <div>\r\n//       <span>Value</span>\r\n//       <span>Time</span>\r\n//     </div>\r\n//     <h2 className={css.headlines}>Correct entered data:</h2>\r\n//   </div>\r\n// )}\r\n\r\n// <button type=\"button\">Minus</button>\r\n// <Field type=\"number\" name=\"waterValue\" />\r\n// <button type=\"button\">Add</button>\r\n\r\n// <div>value</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}