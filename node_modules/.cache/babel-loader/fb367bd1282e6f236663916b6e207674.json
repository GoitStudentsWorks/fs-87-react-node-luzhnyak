{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\aqua-frontend\\\\src\\\\components\\\\MonthStatsTable\\\\MonthStatsTable.tsx\",\n  _s = $RefreshSig$();\nimport css from \"./MonthStatsTable.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectWatersPerMonth } from \"../../redux/waterConsumption/selectors\";\nimport { getAllWaterForMonthThunk } from \"../../redux/waterConsumption/operations\";\nimport { selectUser } from \"../../redux/auth/selectors\";\nimport clsx from \"clsx\";\nimport Modal from \"../../components/Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MonthStatsTable = _ref => {\n  _s();\n  let {\n    popUpOpen\n  } = _ref;\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const creationDate = user.createdAt ? new Date(user.createdAt) : new Date();\n  const currentUserYear = creationDate.getFullYear();\n  const currentUserMonth = creationDate.getMonth() + 1;\n  const currentUserDay = creationDate.getDate();\n  const waterPerMonth = useSelector(selectWatersPerMonth);\n  const [sDate, setsDate] = useState(new Date());\n  const [sDay, setsDay] = useState(null);\n  const [popUp, setsPopup] = useState(false);\n  const [disabledYear, setsDisabledYear] = useState(false);\n  const [disabledForUser, setsDisabledForUser] = useState(false);\n  const [isOpen, setMonthChartModal] = useState(false);\n  const previous = \"\\u003C\";\n  const next = \"\\u003E\";\n\n  // for chart\n  const labels = [];\n  const dataPerDay = [];\n  useEffect(() => {\n    const getMonthWater = () => {\n      const y = sDate.getFullYear();\n      const m = sDate.getMonth();\n      const chosenMonth = {\n        year: y.toString(),\n        month: m.toString()\n      };\n      dispatch(getAllWaterForMonthThunk(chosenMonth));\n    };\n    getMonthWater();\n    const disabled = () => {\n      const currentDate = new Date();\n      const month = Number(sDate.toLocaleString(\"en-US\", {\n        month: \"numeric\"\n      }));\n      const year = Number(sDate.toLocaleString(\"en-US\", {\n        year: \"numeric\"\n      }));\n      const currentYear = currentDate.getFullYear();\n      const currentMonth = currentDate.getMonth() + 1;\n      if (month === currentMonth && year === currentYear) {\n        setsDisabledYear(true);\n      }\n    };\n    disabled();\n    if (popUpOpen) {\n      handleCloseClick();\n    }\n  }, [popUpOpen, sDate, dispatch]);\n  const findMonthDays = (y, m) => {\n    return new Date(y, m + 1, 0).getDate();\n  };\n  const changeToPrevMonth = () => {\n    const month = Number(sDate.toLocaleString(\"en-US\", {\n      month: \"numeric\"\n    })) - 1;\n    const year = Number(sDate.toLocaleString(\"en-US\", {\n      year: \"numeric\"\n    }));\n    if (month === currentUserMonth && year === currentUserYear) {\n      setsDisabledForUser(true);\n    }\n    setsDate(pDate => {\n      const pMonth = pDate.getMonth() - 1;\n      const pYear = pDate.getFullYear();\n      return new Date(pYear, pMonth);\n    });\n    setsDisabledYear(false);\n    setsPopup(false);\n  };\n  const changeToNextMonth = () => {\n    setsDate(pDate => {\n      const nMonth = pDate.getMonth() + 1;\n      const nYear = pDate.getFullYear();\n      return new Date(nYear, nMonth);\n    });\n    setsPopup(false);\n    setsDisabledForUser(false);\n  };\n  const handleDateClick = (day, date) => {\n    if (!popUp) {\n      setsPopup(true);\n    }\n    if (popUp && date.getDate() === sDate.getDate()) {\n      setsPopup(false);\n    }\n    if (popUp && date.getDate() !== sDate.getDate()) {\n      setsPopup(false);\n      setsPopup(true);\n    }\n    setsDate(date);\n    setsDay(day);\n  };\n  const handleCloseClick = () => {\n    setsPopup(false);\n  };\n  const showCalendar = () => {\n    const y = sDate.getFullYear();\n    const m = sDate.getMonth();\n    const mDays = findMonthDays(y, m);\n    const allDays = [];\n    const currentDate = new Date();\n    const currentDay = currentDate.getDate();\n    const currentMonth = currentDate.getMonth();\n    // Show actual days\n    let progress = 0;\n    let waterNorm = 0;\n    let dailyEntries = null;\n    for (let d = 1; d <= mDays; d += 1) {\n      const date = new Date(y, m, d);\n      labels.push(d.toString());\n      let dayInMonth = [];\n      waterPerMonth.map(day => {\n        const dateFormonth = new Date(day.date);\n        dayInMonth.push(Number(dateFormonth.toLocaleString(\"en-US\", {\n          day: \"numeric\"\n        })));\n        return day;\n      });\n      const percent = waterPerMonth.map(day => day.progress);\n      const dailyNorm = waterPerMonth.map(day => day.waterRate);\n      const entries = waterPerMonth.map(day => day.dailyEntries);\n      for (let i = 0; i < dayInMonth.length; i += 1) {\n        if (d === dayInMonth[i]) {\n          progress = Math.round(Number(percent[i]));\n          waterNorm = dailyNorm[i];\n          dailyEntries = entries[i];\n        }\n      }\n      if (m === currentMonth) {\n        if (d <= currentDay) {\n          allDays.push({\n            day: d,\n            date: date,\n            value: progress,\n            disabled: false,\n            norm: waterNorm,\n            dailyEntry: dailyEntries\n          });\n        } else {\n          allDays.push({\n            day: d,\n            date: date,\n            value: 0,\n            disabled: true\n          });\n        }\n      } else {\n        allDays.push({\n          day: d,\n          date: date,\n          value: progress,\n          disabled: false,\n          norm: waterNorm,\n          dailyEntry: dailyEntries\n        });\n      }\n    }\n    if (m + 1 === currentUserMonth && y === currentUserYear) {\n      const inactive = allDays.filter(day => day.day < currentUserDay);\n      inactive.map(day => day.disabled = true);\n    }\n    allDays.map(day => dataPerDay.push(day.value.toString()));\n    return allDays;\n  };\n  const openModal = () => {\n    setMonthChartModal(true);\n  };\n  const closeModal = () => {\n    setMonthChartModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css[\"calendar-container\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css[\"calendar-header\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css[\"title-chart\"],\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: css.title,\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: css[\"btn-chart\"],\n          onClick: openModal,\n          children: \"See monthly statistic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.monthPicker,\n        children: [disabledForUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: css[\"btn-arrow\"],\n          disabled: true,\n          children: previous\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: css[\"btn-arrow\"],\n          onClick: changeToPrevMonth,\n          children: previous\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: css[\"title-month\"],\n          children: `${sDate.toLocaleString(\"en-US\", {\n            month: \"long\"\n          })}, \n            ${sDate.toLocaleString(\"en-US\", {\n            year: \"numeric\"\n          })}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), disabledYear ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: css[\"btn-arrow\"],\n          disabled: true,\n          children: next\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: css[\"btn-arrow\"],\n          onClick: changeToNextMonth,\n          children: next\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css[\"calendar-table\"],\n      children: showCalendar().map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: !item.disabled ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css[\"day-cell\"],\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: clsx(css.day, {\n                [css[\"day-incomlete\"]]: item.value < 100\n              }),\n              onClick: () => handleDateClick(item.day.toString(), item.date),\n              children: item.day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: css.percent,\n              children: [\" \", item.value, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css[\"day-cell\"],\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: css[\"disabled-day\"],\n              disabled: true,\n              children: item.day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: css.percent,\n              children: [\" \", item.value, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this)\n        }, `d-${item.day}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"\",\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthStatsTable, \"3rFCwsjo0GemVUIxCmxS5vG2Hp0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = MonthStatsTable;\nvar _c;\n$RefreshReg$(_c, \"MonthStatsTable\");","map":{"version":3,"names":["css","useEffect","useState","useDispatch","useSelector","selectWatersPerMonth","getAllWaterForMonthThunk","selectUser","clsx","Modal","jsxDEV","_jsxDEV","MonthStatsTable","_ref","_s","popUpOpen","dispatch","user","creationDate","createdAt","Date","currentUserYear","getFullYear","currentUserMonth","getMonth","currentUserDay","getDate","waterPerMonth","sDate","setsDate","sDay","setsDay","popUp","setsPopup","disabledYear","setsDisabledYear","disabledForUser","setsDisabledForUser","isOpen","setMonthChartModal","previous","next","labels","dataPerDay","getMonthWater","y","m","chosenMonth","year","toString","month","disabled","currentDate","Number","toLocaleString","currentYear","currentMonth","handleCloseClick","findMonthDays","changeToPrevMonth","pDate","pMonth","pYear","changeToNextMonth","nMonth","nYear","handleDateClick","day","date","showCalendar","mDays","allDays","currentDay","progress","waterNorm","dailyEntries","d","push","dayInMonth","map","dateFormonth","percent","dailyNorm","waterRate","entries","i","length","Math","round","value","norm","dailyEntry","inactive","filter","openModal","closeModal","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","monthPicker","item","onClose","_c","$RefreshReg$"],"sources":["D:/Web/aqua-frontend/src/components/MonthStatsTable/MonthStatsTable.tsx"],"sourcesContent":["import css from \"./MonthStatsTable.module.css\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport PopUpDay from \"./PopUpDay\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectWatersPerMonth } from \"../../redux/waterConsumption/selectors\";\r\nimport { getAllWaterForMonthThunk } from \"../../redux/waterConsumption/operations\";\r\nimport { selectUser } from \"../../redux/auth/selectors\";\r\nimport clsx from \"clsx\";\r\nimport WaterMonthChart from \"../../components/WaterMonthChart/WaterMonthChart\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\n\r\ninterface IProps {\r\n  popUpOpen: boolean;\r\n}\r\n\r\nexport const MonthStatsTable: FC<IProps> = ({ popUpOpen }) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const creationDate = user.createdAt ? new Date(user.createdAt) : new Date();\r\n  const currentUserYear = creationDate.getFullYear();\r\n  const currentUserMonth = creationDate.getMonth() + 1;\r\n  const currentUserDay = creationDate.getDate();\r\n  const waterPerMonth = useSelector(selectWatersPerMonth);\r\n  const [sDate, setsDate] = useState(new Date());\r\n  const [sDay, setsDay] = useState<string | null>(null);\r\n  const [popUp, setsPopup] = useState(false);\r\n  const [disabledYear, setsDisabledYear] = useState(false);\r\n  const [disabledForUser, setsDisabledForUser] = useState(false);\r\n  const [isOpen, setMonthChartModal] = useState(false);\r\n  const previous = \"\\u003C\";\r\n  const next = \"\\u003E\";\r\n\r\n  // for chart\r\n  const labels: string[] = [];\r\n  const dataPerDay: string[] = [];\r\n\r\n  useEffect(() => {\r\n    const getMonthWater = () => {\r\n      const y = sDate.getFullYear();\r\n      const m = sDate.getMonth();\r\n      const chosenMonth = { year: y.toString(), month: m.toString() };\r\n      dispatch(getAllWaterForMonthThunk(chosenMonth));\r\n    };\r\n    getMonthWater();\r\n\r\n    const disabled = () => {\r\n      const currentDate = new Date();\r\n      const month = Number(\r\n        sDate.toLocaleString(\"en-US\", {\r\n          month: \"numeric\",\r\n        })\r\n      );\r\n      const year = Number(\r\n        sDate.toLocaleString(\"en-US\", {\r\n          year: \"numeric\",\r\n        })\r\n      );\r\n      const currentYear = currentDate.getFullYear();\r\n      const currentMonth = currentDate.getMonth() + 1;\r\n\r\n      if (month === currentMonth && year === currentYear) {\r\n        setsDisabledYear(true);\r\n      }\r\n    };\r\n\r\n    disabled();\r\n\r\n    if (popUpOpen) {\r\n      handleCloseClick();\r\n    }\r\n  }, [popUpOpen, sDate, dispatch]);\r\n\r\n  const findMonthDays = (y: number, m: number) => {\r\n    return new Date(y, m + 1, 0).getDate();\r\n  };\r\n\r\n  const changeToPrevMonth = () => {\r\n    const month =\r\n      Number(\r\n        sDate.toLocaleString(\"en-US\", {\r\n          month: \"numeric\",\r\n        })\r\n      ) - 1;\r\n    const year = Number(\r\n      sDate.toLocaleString(\"en-US\", {\r\n        year: \"numeric\",\r\n      })\r\n    );\r\n\r\n    if (month === currentUserMonth && year === currentUserYear) {\r\n      setsDisabledForUser(true);\r\n    }\r\n\r\n    setsDate((pDate) => {\r\n      const pMonth = pDate.getMonth() - 1;\r\n      const pYear = pDate.getFullYear();\r\n      return new Date(pYear, pMonth);\r\n    });\r\n\r\n    setsDisabledYear(false);\r\n    setsPopup(false);\r\n  };\r\n\r\n  const changeToNextMonth = () => {\r\n    setsDate((pDate) => {\r\n      const nMonth = pDate.getMonth() + 1;\r\n      const nYear = pDate.getFullYear();\r\n      return new Date(nYear, nMonth);\r\n    });\r\n    setsPopup(false);\r\n    setsDisabledForUser(false);\r\n  };\r\n\r\n  const handleDateClick = (day: string, date: Date) => {\r\n    if (!popUp) {\r\n      setsPopup(true);\r\n    }\r\n    if (popUp && date.getDate() === sDate.getDate()) {\r\n      setsPopup(false);\r\n    }\r\n\r\n    if (popUp && date.getDate() !== sDate.getDate()) {\r\n      setsPopup(false);\r\n      setsPopup(true);\r\n    }\r\n\r\n    setsDate(date);\r\n    setsDay(day);\r\n  };\r\n\r\n  const handleCloseClick = () => {\r\n    setsPopup(false);\r\n  };\r\n\r\n  const showCalendar = () => {\r\n    const y = sDate.getFullYear();\r\n    const m = sDate.getMonth();\r\n    const mDays = findMonthDays(y, m);\r\n    const allDays = [];\r\n\r\n    const currentDate = new Date();\r\n    const currentDay = currentDate.getDate();\r\n    const currentMonth = currentDate.getMonth();\r\n    // Show actual days\r\n    let progress = 0;\r\n    let waterNorm = 0;\r\n    let dailyEntries = null;\r\n\r\n    for (let d = 1; d <= mDays; d += 1) {\r\n      const date = new Date(y, m, d);\r\n      labels.push(d.toString());\r\n      let dayInMonth: number[] = [];\r\n\r\n      waterPerMonth.map((day) => {\r\n        const dateFormonth = new Date(day.date);\r\n        dayInMonth.push(\r\n          Number(\r\n            dateFormonth.toLocaleString(\"en-US\", {\r\n              day: \"numeric\",\r\n            })\r\n          )\r\n        );\r\n        return day;\r\n      });\r\n\r\n      const percent = waterPerMonth.map((day) => day.progress);\r\n      const dailyNorm = waterPerMonth.map((day) => day.waterRate);\r\n      const entries = waterPerMonth.map((day) => day.dailyEntries);\r\n\r\n      for (let i = 0; i < dayInMonth.length; i += 1) {\r\n        if (d === dayInMonth[i]) {\r\n          progress = Math.round(Number(percent[i]));\r\n          waterNorm = dailyNorm[i];\r\n          dailyEntries = entries[i];\r\n        }\r\n      }\r\n\r\n      if (m === currentMonth) {\r\n        if (d <= currentDay) {\r\n          allDays.push({\r\n            day: d,\r\n            date: date,\r\n            value: progress,\r\n            disabled: false,\r\n            norm: waterNorm,\r\n            dailyEntry: dailyEntries,\r\n          });\r\n        } else {\r\n          allDays.push({ day: d, date: date, value: 0, disabled: true });\r\n        }\r\n      } else {\r\n        allDays.push({\r\n          day: d,\r\n          date: date,\r\n          value: progress,\r\n          disabled: false,\r\n          norm: waterNorm,\r\n          dailyEntry: dailyEntries,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (m + 1 === currentUserMonth && y === currentUserYear) {\r\n      const inactive = allDays.filter((day) => day.day < currentUserDay);\r\n      inactive.map((day) => (day.disabled = true));\r\n    }\r\n    allDays.map((day) => dataPerDay.push(day.value.toString()));\r\n    return allDays;\r\n  };\r\n  const openModal = () => {\r\n    setMonthChartModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setMonthChartModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className={css[\"calendar-container\"]}>\r\n      <div className={css[\"calendar-header\"]}>\r\n        <div className={css[\"title-chart\"]}>\r\n          {\" \"}\r\n          <h2 className={css.title}>Month</h2>\r\n          <button className={css[\"btn-chart\"]} onClick={openModal}>\r\n            See monthly statistic\r\n          </button>\r\n        </div>\r\n        <div className={css.monthPicker}>\r\n          {disabledForUser ? (\r\n            <button className={css[\"btn-arrow\"]} disabled>\r\n              {previous}\r\n            </button>\r\n          ) : (\r\n            <button className={css[\"btn-arrow\"]} onClick={changeToPrevMonth}>\r\n              {previous}\r\n            </button>\r\n          )}\r\n          <h2 className={css[\"title-month\"]}>\r\n            {`${sDate.toLocaleString(\"en-US\", {\r\n              month: \"long\",\r\n            })}, \r\n            ${sDate.toLocaleString(\"en-US\", {\r\n              year: \"numeric\",\r\n            })}`}\r\n          </h2>\r\n\r\n          {disabledYear ? (\r\n            <button className={css[\"btn-arrow\"]} disabled>\r\n              {next}\r\n            </button>\r\n          ) : (\r\n            <button className={css[\"btn-arrow\"]} onClick={changeToNextMonth}>\r\n              {next}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={css[\"calendar-table\"]}>\r\n        {showCalendar().map((item) => {\r\n          return (\r\n            <div key={`d-${item.day}`}>\r\n              {!item.disabled ? (\r\n                <div className={css[\"day-cell\"]}>\r\n                  <button\r\n                    className={clsx(css.day, {\r\n                      [css[\"day-incomlete\"]]: item.value < 100,\r\n                    })}\r\n                    onClick={() =>\r\n                      handleDateClick(item.day.toString(), item.date)\r\n                    }\r\n                  >\r\n                    {item.day}\r\n                  </button>\r\n                  <p className={css.percent}> {item.value}%</p>\r\n\r\n                  {/* {popUp && sDay === item.day.toString() && (\r\n                    <PopUpDay\r\n                      dayId={item?.id}\r\n                      handleCloseClick={handleCloseClick}\r\n                      sDate={sDate}\r\n                      waterRate={item.norm}\r\n                      dailyEntries={item.dailyEntry.toString()}\r\n                      progress={item.value.toString()}\r\n                    />\r\n                  )} */}\r\n                </div>\r\n              ) : (\r\n                <div className={css[\"day-cell\"]}>\r\n                  <button className={css[\"disabled-day\"]} disabled>\r\n                    {item.day}\r\n                  </button>\r\n                  <p className={css.percent}> {item.value}%</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {isOpen && (\r\n        <Modal title=\"\" onClose={closeModal}>\r\n          {/* <WaterMonthChart label={labels} monthlyData={dataPerDay} /> */}\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}