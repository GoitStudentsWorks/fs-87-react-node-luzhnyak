{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setToken, clearToken, requestUserSignUp, requestUserLogin, requestUserLogout, refreshCurrentUser, updateUserAvatar, updateUserInfo, updateWaterNorma } from \"../../services/waterApi\";\n//TODO: add notifications\n\nexport const signUpThunk = createAsyncThunk(\"auth/register\", async (formData, thunkApi) => {\n  try {\n    const response = await requestUserSignUp(formData);\n    return response;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error);\n  }\n});\nexport const loginThunk = createAsyncThunk(\"auth/login\", async (formData, thunkApi) => {\n  try {\n    const response = await requestUserLogin(formData);\n    return response;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error);\n  }\n});\nexport const logoutThunk = createAsyncThunk(\"auth/logout\", async (_, thunkApi) => {\n  try {\n    await requestUserLogout();\n    clearToken();\n  } catch (error) {\n    return thunkApi.rejectWithValue(error);\n  }\n});\nexport const refreshCurrentUserThunk = createAsyncThunk(\"auth/refresh\", async (_, thunkApi) => {\n  const state = thunkApi.getState();\n  const token = state.auth.token;\n  try {\n    token && setToken(token);\n    const response = await refreshCurrentUser();\n    return response;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error);\n  }\n}, {\n  condition: (_, thunkApi) => {\n    // const state = <RootState>thunkApi.getState();\n    // const token = state.auth.token;\n    // if (!token) {\n    //   return thunkApi.rejectWithValue(\"Unable to fetch user\");\n    // }\n    return true;\n  }\n});\nexport const updateAvatarThunk = createAsyncThunk(\"auth/avatar\", async (newPhoto, thunkApi) => {\n  try {\n    const avatarURL = await updateUserAvatar(newPhoto);\n    return avatarURL;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error);\n  }\n});\nexport const updateUserInfoThunk = createAsyncThunk(\"auth/edituserinfo\", async (formData, thunkApi) => {\n  try {\n    const response = await updateUserInfo(formData);\n    return response;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error);\n  }\n});\nexport const updateWaterNormaThunk = createAsyncThunk(\"auth/updateWaterRate\", async (newWaterRate, thunkApi) => {\n  try {\n    const response = await updateWaterNorma(newWaterRate);\n    return response;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","setToken","clearToken","requestUserSignUp","requestUserLogin","requestUserLogout","refreshCurrentUser","updateUserAvatar","updateUserInfo","updateWaterNorma","signUpThunk","formData","thunkApi","response","error","rejectWithValue","loginThunk","logoutThunk","_","refreshCurrentUserThunk","state","getState","token","auth","condition","updateAvatarThunk","newPhoto","avatarURL","updateUserInfoThunk","updateWaterNormaThunk","newWaterRate"],"sources":["D:/Web/aqua-frontend/src/redux/auth/operations.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  setToken,\r\n  clearToken,\r\n  requestUserSignUp,\r\n  requestUserLogin,\r\n  requestUserLogout,\r\n  refreshCurrentUser,\r\n  updateUserAvatar,\r\n  updateUserInfo,\r\n  updateWaterNorma,\r\n} from \"../../services/waterApi\";\r\nimport { RootState } from \"../store\";\r\nimport { IRegisterUser, IUpdateUser } from \"../../types\";\r\n\r\n//TODO: add notifications\r\n\r\nexport const signUpThunk = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (formData: IRegisterUser, thunkApi) => {\r\n    try {\r\n      const response = await requestUserSignUp(formData);\r\n      return response;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const loginThunk = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (formData: IRegisterUser, thunkApi) => {\r\n    try {\r\n      const response = await requestUserLogin(formData);\r\n      return response;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutThunk = createAsyncThunk(\r\n  \"auth/logout\",\r\n  async (_, thunkApi) => {\r\n    try {\r\n      await requestUserLogout();\r\n      clearToken();\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const refreshCurrentUserThunk = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkApi) => {\r\n    const state = thunkApi.getState() as RootState;\r\n    const token = state.auth.token;\r\n\r\n    try {\r\n      token && setToken(token);\r\n      const response = await refreshCurrentUser();\r\n      return response;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error);\r\n    }\r\n  },\r\n\r\n  {\r\n    condition: (_, thunkApi) => {\r\n      // const state = <RootState>thunkApi.getState();\r\n      // const token = state.auth.token;\r\n      // if (!token) {\r\n      //   return thunkApi.rejectWithValue(\"Unable to fetch user\");\r\n      // }\r\n      return true;\r\n    },\r\n  }\r\n);\r\n\r\nexport const updateAvatarThunk = createAsyncThunk(\r\n  \"auth/avatar\",\r\n  async (newPhoto: Blob, thunkApi) => {\r\n    try {\r\n      const avatarURL = await updateUserAvatar(newPhoto);\r\n      return avatarURL;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateUserInfoThunk = createAsyncThunk(\r\n  \"auth/edituserinfo\",\r\n  async (formData: IUpdateUser, thunkApi) => {\r\n    try {\r\n      const response = await updateUserInfo(formData);\r\n      return response;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateWaterNormaThunk = createAsyncThunk(\r\n  \"auth/updateWaterRate\",\r\n  async (newWaterRate: { waterRate: string }, thunkApi) => {\r\n    try {\r\n      const response = await updateWaterNorma(newWaterRate);\r\n      return response;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}