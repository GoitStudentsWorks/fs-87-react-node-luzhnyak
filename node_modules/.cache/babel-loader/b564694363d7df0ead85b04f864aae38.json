{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\aqua-frontend\\\\src\\\\pages\\\\ResendVerifyEmailPage\\\\ResendVerifyEmailPage.tsx\",\n  _s = $RefreshSig$();\nimport FormSendEmail from '../../components/FormSendEmail/FormSendEmail';\nimport css from './ResendVerifyEmailPage.module.css';\nimport { resendVerifyToken } from '../../services/waterApi';\nimport { toast } from 'react-toastify';\nimport Backdrop from '../../components/Backdrop/Backdrop';\nimport Loader from '../../components/Loader/Loader';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResendVerifyEmailPage = () => {\n  _s();\n  const [loader, setLoader] = useState(false);\n  const handleSubmit = async (values, _ref) => {\n    let {\n      resetForm\n    } = _ref;\n    setLoader(true);\n    try {\n      await resendVerifyToken(values);\n      toast.success(\"The operation was successful, check your email\");\n      setTimeout(() => {\n        return window.location.replace('/aqua-frontend/signin');\n      }, 3000);\n    } catch (error) {\n      setLoader(false);\n      toast.error(\"Something went wrong, try again\");\n    } finally {\n      setLoader(false);\n    }\n    resetForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: [/*#__PURE__*/_jsxDEV(FormSendEmail, {\n      title: \"Resend verify email\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), loader && /*#__PURE__*/_jsxDEV(Backdrop, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ResendVerifyEmailPage, \"dcXTTeI1fBa4WU5nkxI/0ViaXOU=\");\n_c = ResendVerifyEmailPage;\nexport default ResendVerifyEmailPage;\nvar _c;\n$RefreshReg$(_c, \"ResendVerifyEmailPage\");","map":{"version":3,"names":["FormSendEmail","css","resendVerifyToken","toast","Backdrop","Loader","useState","jsxDEV","_jsxDEV","ResendVerifyEmailPage","_s","loader","setLoader","handleSubmit","values","_ref","resetForm","success","setTimeout","window","location","replace","error","className","container","children","title","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web/aqua-frontend/src/pages/ResendVerifyEmailPage/ResendVerifyEmailPage.tsx"],"sourcesContent":["import FormSendEmail from '../../components/FormSendEmail/FormSendEmail';\r\nimport css from './ResendVerifyEmailPage.module.css'\r\nimport { resendVerifyToken } from '../../services/waterApi';\r\nimport { toast } from 'react-toastify';\r\nimport Backdrop from '../../components/Backdrop/Backdrop';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { useState } from 'react';\r\nimport { FormikHelpers } from 'formik';\r\n\r\ninterface Values {\r\n  email: string,\r\n} \r\n\r\nconst ResendVerifyEmailPage = () => {\r\n  const [loader, setLoader] = useState(false);\r\n  \r\n  const handleSubmit = async (values: Values, { resetForm }: FormikHelpers<Values>) => {\r\n    setLoader(true)\r\n    try {\r\n      \r\n      await resendVerifyToken(values)\r\n      toast.success(\"The operation was successful, check your email\")\r\n\r\n      setTimeout(()=> {\r\n        return window.location.replace('/aqua-frontend/signin');\r\n      }, 3000)\r\n\r\n    } catch (error) {\r\n      setLoader(false)\r\n      toast.error(\"Something went wrong, try again\")\r\n      \r\n    } finally {\r\n      setLoader(false)\r\n    }\r\n\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <FormSendEmail title={\"Resend verify email\"} onSubmit={handleSubmit}/>\r\n      {loader && \r\n       <Backdrop>\r\n         <Loader />\r\n       </Backdrop>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResendVerifyEmailPage;"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,8CAA8C;AACxE,OAAOC,GAAG,MAAM,oCAAoC;AACpD,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOjC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMO,YAAY,GAAG,MAAAA,CAAOC,MAAc,EAAAC,IAAA,KAA2C;IAAA,IAAzC;MAAEC;IAAiC,CAAC,GAAAD,IAAA;IAC9EH,SAAS,CAAC,IAAI,CAAC;IACf,IAAI;MAEF,MAAMV,iBAAiB,CAACY,MAAM,CAAC;MAC/BX,KAAK,CAACc,OAAO,CAAC,gDAAgD,CAAC;MAE/DC,UAAU,CAAC,MAAK;QACd,OAAOC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,uBAAuB,CAAC;MACzD,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,SAAS,CAAC,KAAK,CAAC;MAChBT,KAAK,CAACmB,KAAK,CAAC,iCAAiC,CAAC;IAEhD,CAAC,SAAS;MACRV,SAAS,CAAC,KAAK,CAAC;IAClB;IAEAI,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACER,OAAA;IAAKe,SAAS,EAAEtB,GAAG,CAACuB,SAAU;IAAAC,QAAA,gBAC5BjB,OAAA,CAACR,aAAa;MAAC0B,KAAK,EAAE,qBAAsB;MAACC,QAAQ,EAAEd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACrEpB,MAAM,iBACNH,OAAA,CAACJ,QAAQ;MAAAqB,QAAA,eACPjB,OAAA,CAACH,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlCID,qBAAqB;AAAAuB,EAAA,GAArBvB,qBAAqB;AAoC3B,eAAeA,qBAAqB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}