{"ast":null,"code":"import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { signUpThunk, loginThunk, logoutThunk, refreshCurrentUserThunk } from './operations';\nconst authInitialState = {\n  token: null,\n  user: {\n    name: null,\n    email: null\n  },\n  isLoggedIn: false,\n  isRefreshing: false,\n  error: null\n};\nconst handlePending = state => {\n  state.isRefreshing = true;\n  state.error = null;\n};\nconst handleRejected = (state, action) => {\n  state.isRefreshing = false;\n  state.error = action.payload;\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: authInitialState,\n  extraReducers: builder => builder.addCase(signUpThunk.fulfilled, (state, action) => {\n    state.token = action.payload.token;\n    state.user = action.payload.user;\n    state.isLoggedIn = true;\n    state.isRefreshing = false;\n    state.error = null;\n  }).addCase(loginThunk.fulfilled, (state, action) => {\n    state.token = action.payload.token;\n    state.user = action.payload.user;\n    state.isLoggedIn = true;\n    state.isRefreshing = false;\n    state.error = null;\n  }).addCase(logoutThunk.fulfilled, () => {\n    return authInitialState;\n  }).addCase(refreshCurrentUserThunk.fulfilled, (state, action) => {\n    state.user = action.payload;\n    state.isLoggedIn = true;\n    state.isRefreshing = false;\n  }).addMatcher(isAnyOf(signUpThunk.pending, loginThunk.pending, logoutThunk.pending, refreshCurrentUserThunk.pending), handlePending).addMatcher(isAnyOf(signUpThunk.rejected, loginThunk.rejected, logoutThunk.rejected, refreshCurrentUserThunk.rejected), handleRejected)\n});\nexport const authReducer = authSlice.reducer;","map":{"version":3,"names":["createSlice","isAnyOf","signUpThunk","loginThunk","logoutThunk","refreshCurrentUserThunk","authInitialState","token","user","name","email","isLoggedIn","isRefreshing","error","handlePending","state","handleRejected","action","payload","authSlice","initialState","extraReducers","builder","addCase","fulfilled","addMatcher","pending","rejected","authReducer","reducer"],"sources":["D:/Web/aqua-frontend/src/redux/auth/slice.js"],"sourcesContent":["import { createSlice, isAnyOf } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  signUpThunk,\r\n  loginThunk,\r\n  logoutThunk,\r\n  refreshCurrentUserThunk,\r\n} from './operations';\r\n\r\nconst authInitialState = {\r\n  token: null,\r\n  user: {\r\n    name: null,\r\n    email: null,\r\n  },\r\n  isLoggedIn: false,\r\n  isRefreshing: false,\r\n  error: null,\r\n};\r\n\r\nconst handlePending = state => {\r\n  state.isRefreshing = true;\r\n  state.error = null;\r\n};\r\n\r\nconst handleRejected = (state, action) => {\r\n  state.isRefreshing = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: authInitialState,\r\n\r\n  extraReducers: builder =>\r\n    builder\r\n      .addCase(signUpThunk.fulfilled, (state, action) => {\r\n        state.token = action.payload.token;\r\n        state.user = action.payload.user;\r\n        state.isLoggedIn = true;\r\n        state.isRefreshing = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginThunk.fulfilled, (state, action) => {\r\n        state.token = action.payload.token;\r\n        state.user = action.payload.user;\r\n        state.isLoggedIn = true;\r\n        state.isRefreshing = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(logoutThunk.fulfilled, () => {\r\n        return authInitialState;\r\n      })\r\n      .addCase(refreshCurrentUserThunk.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        state.isLoggedIn = true;\r\n        state.isRefreshing = false;\r\n      })\r\n      .addMatcher(\r\n        isAnyOf(\r\n          signUpThunk.pending,\r\n          loginThunk.pending,\r\n          logoutThunk.pending,\r\n          refreshCurrentUserThunk.pending\r\n        ),\r\n        handlePending\r\n      )\r\n      .addMatcher(\r\n        isAnyOf(\r\n          signUpThunk.rejected,\r\n          loginThunk.rejected,\r\n          logoutThunk.rejected,\r\n          refreshCurrentUserThunk.rejected\r\n        ),\r\n        handleRejected\r\n      ),\r\n});\r\n\r\nexport const authReducer = authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAEvD,SACEC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,uBAAuB,QAClB,cAAc;AAErB,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE;IACJC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDC,UAAU,EAAE,KAAK;EACjBC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC7BA,KAAK,CAACH,YAAY,GAAG,IAAI;EACzBG,KAAK,CAACF,KAAK,GAAG,IAAI;AACpB,CAAC;AAED,MAAMG,cAAc,GAAGA,CAACD,KAAK,EAAEE,MAAM,KAAK;EACxCF,KAAK,CAACH,YAAY,GAAG,KAAK;EAC1BG,KAAK,CAACF,KAAK,GAAGI,MAAM,CAACC,OAAO;AAC9B,CAAC;AAED,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZW,YAAY,EAAEd,gBAAgB;EAE9Be,aAAa,EAAEC,OAAO,IACpBA,OAAO,CACJC,OAAO,CAACrB,WAAW,CAACsB,SAAS,EAAE,CAACT,KAAK,EAAEE,MAAM,KAAK;IACjDF,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;IAClCQ,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;IAChCO,KAAK,CAACJ,UAAU,GAAG,IAAI;IACvBI,KAAK,CAACH,YAAY,GAAG,KAAK;IAC1BG,KAAK,CAACF,KAAK,GAAG,IAAI;EACpB,CAAC,CAAC,CACDU,OAAO,CAACpB,UAAU,CAACqB,SAAS,EAAE,CAACT,KAAK,EAAEE,MAAM,KAAK;IAChDF,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;IAClCQ,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;IAChCO,KAAK,CAACJ,UAAU,GAAG,IAAI;IACvBI,KAAK,CAACH,YAAY,GAAG,KAAK;IAC1BG,KAAK,CAACF,KAAK,GAAG,IAAI;EACpB,CAAC,CAAC,CACDU,OAAO,CAACnB,WAAW,CAACoB,SAAS,EAAE,MAAM;IACpC,OAAOlB,gBAAgB;EACzB,CAAC,CAAC,CACDiB,OAAO,CAAClB,uBAAuB,CAACmB,SAAS,EAAE,CAACT,KAAK,EAAEE,MAAM,KAAK;IAC7DF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC3BH,KAAK,CAACJ,UAAU,GAAG,IAAI;IACvBI,KAAK,CAACH,YAAY,GAAG,KAAK;EAC5B,CAAC,CAAC,CACDa,UAAU,CACTxB,OAAO,CACLC,WAAW,CAACwB,OAAO,EACnBvB,UAAU,CAACuB,OAAO,EAClBtB,WAAW,CAACsB,OAAO,EACnBrB,uBAAuB,CAACqB,OAC1B,CAAC,EACDZ,aACF,CAAC,CACAW,UAAU,CACTxB,OAAO,CACLC,WAAW,CAACyB,QAAQ,EACpBxB,UAAU,CAACwB,QAAQ,EACnBvB,WAAW,CAACuB,QAAQ,EACpBtB,uBAAuB,CAACsB,QAC1B,CAAC,EACDX,cACF;AACN,CAAC,CAAC;AAEF,OAAO,MAAMY,WAAW,GAAGT,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module"}