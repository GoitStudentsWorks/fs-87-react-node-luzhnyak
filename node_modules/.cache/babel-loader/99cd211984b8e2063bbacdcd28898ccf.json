{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth/slice';\nconst authConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n};\n\n//TODO: add water reducer\nconst rootReducer = combineReducers({\n  auth: persistReducer(authConfig, authReducer)\n});\nconst ignoredPersistenceActions = [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER];\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ignoredPersistenceActions\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","authReducer","authConfig","key","whitelist","rootReducer","auth","ignoredPersistenceActions","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/Web/aqua-frontend/src/redux/store.js"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authReducer } from './auth/slice';\r\n\r\nconst authConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\n//TODO: add water reducer\r\nconst rootReducer = combineReducers({\r\n  auth: persistReducer(authConfig, authReducer),\r\n});\r\n\r\nconst ignoredPersistenceActions = [\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ignoredPersistenceActions,\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAElE,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AAEtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,WAAW,QAAQ,cAAc;AAE1C,MAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE,MAAM;EACXH,OAAO;EACPI,SAAS,EAAE,CAAC,OAAO;AACrB,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGf,eAAe,CAAC;EAClCgB,IAAI,EAAEb,cAAc,CAACS,UAAU,EAAED,WAAW;AAC9C,CAAC,CAAC;AAEF,MAAMM,yBAAyB,GAAG,CAChCb,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,CACT;AAED,OAAO,MAAMS,KAAK,GAAGjB,cAAc,CAAC;EAClCkB,OAAO,EAAEJ,WAAW;EACpBK,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAEN;IAClB;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMO,SAAS,GAAGtB,YAAY,CAACgB,KAAK,CAAC"},"metadata":{},"sourceType":"module"}