{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = 'https://aqua-backend-ieu7.onrender.com';\nexport const setToken = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\nexport const clearToken = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\n//==========================Authorization\n\nexport const requestUserSignUp = async formData => {\n  const {\n    data\n  } = await axios.post('/users/register', formData);\n  setToken(data.token);\n  return data;\n};\nexport const requestUserLogin = async formData => {\n  const {\n    data\n  } = await axios.post('/users/login', formData);\n  setToken(data.token);\n  return data;\n};\nexport const requestUserLogout = async () => {\n  await axios.post('/users/logout');\n};\nexport const refreshCurrentUser = async () => {\n  const {\n    data\n  } = await axios.get('/users/current');\n  return data;\n};\n\n//==========================Update User Data\n\nexport const updateUserAvatar = async newAvatar => {\n  const formData = new FormData();\n  formData.append('avatar', newAvatar);\n  const {\n    data\n  } = await axios.patch('users/avatar', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return data.avatarURL;\n};\nexport const updateUserInfo = async formData => {\n  const {\n    data\n  } = await axios.put('/users/update-user', formData);\n  return data.user;\n};\nexport const updateWaterNorma = async newWaterRate => {\n  const dataWaterRate = {\n    waterRate: newWaterRate\n  };\n  const {\n    data\n  } = await axios.patch('/users/water-rate', dataWaterRate);\n  return data.waterRate;\n};\n\n//==========================WaterData\n\nexport const addWater = async newWater => {\n  const {\n    data\n  } = await axios.post('/water', newWater);\n  return data;\n};\nexport const deleteWaterById = async (dayId, entryId) => {\n  const {\n    data\n  } = await axios.delete(`/water/${dayId}/${entryId}`);\n  return data;\n};\nexport const getAllWaterForToday = async () => {\n  const {\n    data\n  } = await axios.get(`/water`);\n  return data;\n};\nexport const updateWaterById = async (dayId, entryId, body) => {\n  const {\n    data\n  } = await axios.put(`/water/${dayId}/${entryId}`, body);\n  return data;\n};\n\n//========================= Verify email\n//TODO: add to slice\nexport const sendVerify = async token => {\n  const {\n    data\n  } = await axios.get(`/users/verify/${token}`);\n  return data;\n};\n\n//========================= Send email forgot password\n//TODO: add to slice\nexport const sendMailForgotPass = async body => {\n  const {\n    data\n  } = await axios.post(`/users/forgot-password`, body);\n  return data;\n};\n\n//========================= Send update password\n//TODO: add to slice\nexport const sendUpdatePass = async (token, body) => {\n  const {\n    data\n  } = await axios.post(`/users/forgot-password/${token}`, {\n    newPassword: body\n  });\n  return data;\n};\n\n//========================= Resend verify email\n\nexport const resendVerifyToken = async body => {\n  const {\n    data\n  } = await axios.post(`/users/verify`, body);\n  return data;\n};","map":{"version":3,"names":["axios","defaults","baseURL","setToken","token","headers","common","Authorization","clearToken","requestUserSignUp","formData","data","post","requestUserLogin","requestUserLogout","refreshCurrentUser","get","updateUserAvatar","newAvatar","FormData","append","patch","avatarURL","updateUserInfo","put","user","updateWaterNorma","newWaterRate","dataWaterRate","waterRate","addWater","newWater","deleteWaterById","dayId","entryId","delete","getAllWaterForToday","updateWaterById","body","sendVerify","sendMailForgotPass","sendUpdatePass","newPassword","resendVerifyToken"],"sources":["D:/Web/aqua-frontend/src/services/waterApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://aqua-backend-ieu7.onrender.com';\r\n\r\nexport const setToken = token => {\r\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n};\r\n\r\nexport const clearToken = () => {\r\n  axios.defaults.headers.common.Authorization = '';\r\n};\r\n\r\n//==========================Authorization\r\n\r\nexport const requestUserSignUp = async formData => {\r\n  const { data } = await axios.post('/users/register', formData);\r\n  setToken(data.token);\r\n  return data;\r\n};\r\n\r\nexport const requestUserLogin = async formData => {\r\n  const { data } = await axios.post('/users/login', formData);\r\n  setToken(data.token);\r\n  return data;\r\n};\r\n\r\nexport const requestUserLogout = async () => {\r\n  await axios.post('/users/logout');\r\n};\r\n\r\nexport const refreshCurrentUser = async () => {\r\n  const { data } = await axios.get('/users/current');\r\n  return data;\r\n};\r\n\r\n//==========================Update User Data\r\n\r\nexport const updateUserAvatar = async newAvatar => {\r\n  const formData = new FormData();\r\n  formData.append('avatar', newAvatar);\r\n  const { data } = await axios.patch('users/avatar', formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n  });\r\n  return data.avatarURL;\r\n};\r\n\r\nexport const updateUserInfo = async formData => {\r\n  const { data } = await axios.put('/users/update-user', formData);\r\n  return data.user;\r\n};\r\n\r\nexport const updateWaterNorma = async newWaterRate => {\r\n  const dataWaterRate = {\r\n    waterRate: newWaterRate,\r\n  };\r\n  const { data } = await axios.patch('/users/water-rate', dataWaterRate);\r\n  return data.waterRate;\r\n};\r\n\r\n//==========================WaterData\r\n\r\nexport const addWater = async newWater => {\r\n  const { data } = await axios.post('/water', newWater);\r\n  return data;\r\n};\r\n\r\nexport const deleteWaterById = async (dayId, entryId) => {\r\n  const { data } = await axios.delete(`/water/${dayId}/${entryId}`);\r\n  return data;\r\n};\r\n\r\nexport const getAllWaterForToday = async () => {\r\n  const { data } = await axios.get(`/water`);\r\n  return data;\r\n};\r\n\r\nexport const updateWaterById = async (dayId, entryId, body) => {\r\n  const { data } = await axios.put(`/water/${dayId}/${entryId}`, body);\r\n  return data;\r\n};\r\n\r\n//========================= Verify email\r\n//TODO: add to slice\r\nexport const sendVerify = async token => {\r\n  const { data } = await axios.get(`/users/verify/${token}`);\r\n  return data;\r\n};\r\n\r\n//========================= Send email forgot password\r\n//TODO: add to slice\r\nexport const sendMailForgotPass = async body => {\r\n  const { data } = await axios.post(`/users/forgot-password`, body);\r\n  return data;\r\n};\r\n\r\n//========================= Send update password\r\n//TODO: add to slice\r\nexport const sendUpdatePass = async (token, body) => {\r\n  const { data } = await axios.post(`/users/forgot-password/${token}`, {\r\n    newPassword: body,\r\n  });\r\n  return data;\r\n};\r\n\r\n//========================= Resend verify email\r\n\r\nexport const resendVerifyToken = async body => {\r\n  const { data } = await axios.post(`/users/verify`, body);\r\n  return data;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}